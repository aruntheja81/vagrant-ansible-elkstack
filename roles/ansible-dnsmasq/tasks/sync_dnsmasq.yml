# These tasks are only used if sync_dnsmasq is true and GlusterFS is being used as backend storage to replicate changes...
# These tasks will be moved into a separate role more than likely at a later time
---
- name: sync_dnsmasq | checking to see if /var/lib/misc has already been moved
  stat:
    path: "{{ dnsmasq_misc_backup_dir }}"
  register: dnsmasq_misc_backup_moved
  when: >
        (dnsmasq_misc_backup_dir is defined and
        dnsmasq_misc_backup_dir != "None")

- name: sync_dnsmasq | moving existing /var/lib/misc
  command: "mv {{ dnsmasq_misc_home }} {{ dnsmasq_misc_backup_dir }}"
  when: >
        (dnsmasq_misc_backup_dir is defined and
        dnsmasq_misc_backup_dir != "None") and
        not dnsmasq_misc_backup_moved.stat.exists

- name: sync_dnsmasq | checking again if /var/lib/misc has already been moved
  stat:
    path: "{{ dnsmasq_misc_backup_dir }}"
  register: dnsmasq_misc_backup_stat
  when: >
        (dnsmasq_misc_backup_dir is defined and
        dnsmasq_misc_backup_dir != "None")

- name: sync_dnsmasq | touching file in dnsmasq_misc_backup_dir
  file:
    path: "{{ dnsmasq_misc_backup_dir }}/already_moved"
    state: touch
  when: >
        (dnsmasq_misc_backup_dir is defined and
        dnsmasq_misc_backup_dir != "None") and
        dnsmasq_misc_backup_stat.stat.exists

- name: sync_dnsmasq | mounting gluster volumes - dnsmasq_misc
  mount:
    name: "{{ item.mountpoint }}"
    src: "{{ item.src }}"
    fstype: "{{ item.fstype }}"
    opts: "{{ item.options }}"
    state: mounted
  with_items:
    - mountpoint: '{{ dnsmasq_misc_home }}'
      src: '{{ primary_gfs_server }}:/{{ dnsmasq_misc_mnt }}'
      fstype: 'glusterfs'
      options: 'defaults,_netdev,backupvolfile-server={{ secondary_gfs_server }}'
  when: >
        (dnsmasq_misc_home is defined and
        dnsmasq_misc_home != "None") and
        dnsmasq_misc_backup_stat.stat.exists

- name: sync_dnsmasq | checking for existing dnsmasq.leases
  stat:
    path: "{{ dnsmasq_misc_home }}/dnsmasq.leases"
  register: dnsmasq_misc_leases_stat
  when: >
        (dnsmasq_misc_home is defined and
        dnsmasq_misc_home != "None")

- name: sync_dnsmasq | checking for existing dnsmasq.leases in backup
  stat:
    path: "{{ dnsmasq_misc_backup_dir }}/dnsmasq.leases"
  register: dnsmasq_misc_backup_leases_stat
  when: >
        (dnsmasq_misc_home is defined and
        dnsmasq_misc_home != "None")

- name: sync_dnsmasq | copying existing dnsmasq.leases to new mountpoint
  command: "cp {{ dnsmasq_misc_backup_dir }}/dnsmasq.leases {{ dnsmasq_misc_home }}"
  run_once: true
  when: >
        (dnsmasq_misc_backup_dir is defined and
        dnsmasq_misc_backup_dir != "None") and
        not dnsmasq_misc_leases_stat.stat.exists and
        dnsmasq_misc_backup_leases_stat
